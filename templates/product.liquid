<script>
    // console.log("Hidden Page... Redirecting");
    // document.location.href = '/';
</script>

{% assign current_variant = product.selected_or_first_available_variant %}
{% assign featured_image = current_variant.featured_image | default: product.featured_image %}
{% assign hiQuality = 'master' %}

<div class="product_title_container">
    <div class="intrinsic__title_container">
        <h1 id="product_title">{{ product.title }}</h1>
    </div>
</div>

<div id="size-chart__lookbook-container">
    <div class="size-chart__lookbook-content">
        <img src="" alt="" id="size-chart__image">
        <h1 id="size-chart__close-text">CLICK TO CLOSE</h1>
    </div>
</div>

<section class="product">
    <div id="clickRegions">
        <div id="leftRegion"></div>

        <div id="rightRegion"></div>
    </div>

    <div class="product__images">
        <div id="product__container">
            <script>
                function imageLoaded(image, imgSrc) {
                    image.onload = null;
                    image.src = imgSrc;
                }
            </script>
            {% for image in product.images %}
                <div class="product__images__container imageTrigger">
                    <img onload="imageLoaded(this, '{{ image.src | img_url: hiQuality }}')" class="product__image glitch_image product__image-{{ forloop.index }}" src="{{ image.src | img_url: '500x500' }}" alt="{{ image.alt }}">
                </div>
            {% endfor %}
        </div>

        <div id="mobile_swipe_region">
            <div class="indicators">
                <p id="pauseGlitch">Hold & Drag Up or Down</p>
                <p id="swipeLeftRight">Swipe Left & Right</p>
            </div>
        </div>

        {% comment %}{% raw %}
    {% assign glitched_image = "none" %}
    {% for tag in product.tags %}
    {% if tag contains 'glitched_bottom' %}
    {% assign glitched_image = "glitched_bottom" %}
    {% elsif tag contains 'glitched_top' %}
    {% assign glitched_image = "glitched_top" %}
    {% endif %}
    {% endfor %}
    {% for image in product.images %}
      {% case glitched_image %}
        {% when 'glitched_top' %}
          {% if image.alt contains 'glitched' %}
            <div class="glitch_container">
                <img class="product__image glitch_image_main" src="{{ image.src | img_url: quality }}" alt="">
                <img class="glitch_image_top glitch_image" src="{{ image.src | img_url: quality }}" alt="">
            </div>
          {% else %}
            <img class="product__image" src="{{ image.src | img_url: quality }}" alt="{{ image.alt | escape }}">
          {% endif %}

        {% when 'glitched_bottom' %}
          {% if image.alt contains 'glitched' %}
              <div class="glitch_container">
                  <img class="product__image glitch_image_main" src="{{ image.src | img_url: quality }}" alt="">
                  <img class="glitch_image_bottom glitch_image" src="{{ image.src | img_url: quality }}" alt="">
              </div>
          {% else %}
              <img class="product__image" src="{{ image.src | img_url: quality }}" alt="{{ image.alt | escape }}">
          {% endif %}

        {% else %}
          <img class="product__image" src="{{ image.src | img_url: quality }}" alt="{{ image.alt | escape }}">
      {% endcase %}

    {% endfor %}
    {% endraw %}{% endcomment %}
    </div>

    <div id="product__info" class="product__info">
        <div class="product_title_container-mobile">
            <div class="intrinsic__title_container-mobile">
                <h1 id="product_title-mobile">{{ product.title }}</h1>
            </div>
        </div>

        <span class="product__info__price">{{ current_variant.price | money }}</span>

        {% include 'size-chart' %}

        <form id="AddToCartForm" class="product__cart-form">
            {% assign vQuantity = 0 %}
            {% assign vVariant = 0 %}

            {% if product.available %}
            {% if product.has_only_default_variant %}
                <input name="id" value="{{ product.variants[0].id }}" type="hidden">
            {% else %}
                <select name="id" id="productSelect">
                {% for variant in product.variants %}
                {% if variant.available %}
                    <option value="{{ variant.id }}">
                        {{ variant.title }}
                    </option>
                {% else %}
                    <option disabled="disabled">
                        {{ variant.title }} - sold out
                    </option>
                {% endif %}
                {% endfor %}
                </select>
            {% endif %}
            {% endif %}

            {% if product.available %}
            <div class="product-info__quantity">
                <label for="Quantity">Quantity</label>
                <input type="number" id="Quantity" name="quantity" value="1" min="1">
            </div>

            <button id="AddToCart" class="button--colored">Add to cart</button>

            {% else %}
            <span class="product__sold-out">Sold Out</span>

            {% endif %}
        </form>

        <div id="cart_feedback__container">
            <div id="cart_feedback__intrinsic">
                <div id="product-info__cart-feedback">There was an error adding your item!</div>
            </div>
        </div>

        <div class="product-info__klarna">
            Pay in installments at checkout with
            <strong><a href="https://www.klarna.com/" target="_blank">
                Klarna
            </a></strong>
        </div>
        <div class="product-info__description">
            <h3 class="product-info__description__title">Description and Details</h3>
            {{ product.description }}
        </div>

        <div class="product__info__badge-container">
            * Each piece from our capsule collection is unique - containing visual cues that have been purposefully made rendering it 1:1
        </div>
    </div>
</section>

<div style="" class="visually-hidden">
    {% section 'product-recommendations' %}
</div>

<script type="text/javascript">
  let add_to_cart = $('#AddToCart');

  add_to_cart.on('click', e => {
      e.preventDefault();

      let productSelect = document.getElementById('productSelect');
      let quantity = document.getElementById('Quantity');

      $.ajax({
          type: 'POST',
          url: '/cart/add.js',
          data: "quantity=" + quantity.value + "&id=" + productSelect.value,
          success: function () {
              location.reload();
          },
          error: function (XMLHttpRequest, textStatus, errorThrown) {
              let response = JSON.parse(XMLHttpRequest.responseText);
              if(response.status) {
                  console.log(response);
                  localStorage.setItem('cart_error_message', response.status);
              }
              else {

                  localStorage.setItem('cart_error_message', null);
              }


              location.reload();
          }
      });
  });

  let imagePath = '{{ image.src | img_url: quality }}';

  let sizeChartContainer = document.getElementById("size-chart__lookbook-container");
  let sizeChartImage = document.getElementById("size-chart__image");

  let imageContainer = document.getElementById("product__container");
  let outerImageContainers = [...document.querySelectorAll(".product__images__container")];
  let mobileSwipeRegion = document.getElementById("mobile_swipe_region");
  let swipeLeftRightTrigger = document.getElementById("swipeLeftRight");

  let leftTrigger = document.getElementById("leftRegion");
  let rightTrigger = document.getElementById("rightRegion");
  let containerTransform;
  let imageContainerWidth;
  let clientX;
  let deltaX;
  let noMouseEvents = false;

  let mobileIndex = 0;

  /* Initial Reset */
  focusReset();

  window.addEventListener('resize', focusReset);

  leftTrigger.addEventListener('click', focusLastImage);

  rightTrigger.addEventListener('click', focusNextImage);

  mobileSwipeRegion.addEventListener('touchstart', function (event) {
      clientX = event.touches[0].clientX;
      noMouseEvents = true;
  }, false);

  mobileSwipeRegion.addEventListener('touchmove', function (event) {
      deltaX = event.changedTouches[0].clientX - clientX;
  });

  mobileSwipeRegion.addEventListener('touchend', function (event) {
      if(Math.abs(deltaX) > 50) {
          if(deltaX<0)
              focusNextImage();
          else
              focusLastImage();
      }
  });

  sizeChartContainer.addEventListener('click', function () {
      hideSizeChart();
  });

  function processCartCallback(e) {
      if(e != null) {
          let response = JSON.parse(e.responseText);

          if(response.status === "bad_status"){
              console.log("error");
              console.log(response);
          }
          else {
              localStorage.setItem('cart_error_message', null);
          }
      }

      localStorage.setItem('cart_show_feedback', "true");
      location.reload();
  }

  function focusNextImage() {
      if(window.innerWidth < 736) {
          swipeLeftRightTrigger.style.display = "none";
          if(mobileIndex>=outerImageContainers.length-1) {
              $(outerImageContainers[mobileIndex]).css({
                  'opacity': '0',
                  'transform': 'translateX(-100vw)'
              });

              $(outerImageContainers[0]).css({
                  'opacity': '0',
                  'transform': 'translateX(100vw)'
              });

              setTimeout(function () {
                  $(outerImageContainers[mobileIndex]).css({
                      'display': 'none'
                  });

                  mobileIndex = 0;

                  $(outerImageContainers[mobileIndex]).css({
                      'display': 'flex'
                  });
              }, 500);

              setTimeout(function () {
                  $(outerImageContainers[mobileIndex]).css({
                      'opacity': '1',
                      'transform': 'translateX(0vw)'
                  });
              }, 600);
          }
          else if(mobileIndex>=0) {
              $(outerImageContainers[mobileIndex]).css({
                  'opacity': '0',
                  'transform': 'translateX(-100vw)'
              });

              $(outerImageContainers[(mobileIndex+1)]).css({
                  'opacity': '0',
                  'transform': 'translateX(100vw)',
                  'display': 'flex'
              });

              setTimeout(function () {
                  $(outerImageContainers[mobileIndex]).css({
                      'opacity': '0',
                      'transform': 'translateX(-100vw)',
                      'display': 'none'
                  });

                  mobileIndex++;

                  $(outerImageContainers[mobileIndex]).css({
                      'opacity': '1',
                      'transform': 'translateX(0vw)'
                  });
              }, 500);
          }
      }
      else {
          containerTransform -= 75;
          let transitionSpeed = 700;

          imageContainer.style.transform = "translateX(" + containerTransform + "vw)";

          if(containerTransform<=-imageContainerWidth){
              setTimeout(function () {
                  focusLastImage();
              }, transitionSpeed);
          }
      }
  }

  function focusLastImage() {
      let transitionSpeed = 2000;

      if(window.innerWidth < 736) {
          swipeLeftRightTrigger.style.display = "none";
          if(mobileIndex<=0) {
              $(outerImageContainers[mobileIndex]).css({
                  'opacity': '0',
                  'transform': 'translateX(100vw)'
              });

              $(outerImageContainers[(outerImageContainers.length-1)]).css({
                  'opacity': '0',
                  'transform': 'translateX(-100vw)'
              });

              setTimeout(function () {
                  for(let containers = 0; containers <= outerImageContainers.length; containers++) {
                      $(outerImageContainers[containers]).css({
                          'display': 'none'
                      });
                  }

                  mobileIndex = outerImageContainers.length-1;

                  $(outerImageContainers[mobileIndex]).css({
                      'display': 'flex'
                  });
              }, 500);

              setTimeout(function () {
                  $(outerImageContainers[mobileIndex]).css({
                      'opacity': '1',
                      'transform': 'translateX(0vw)'
                  });
              }, 600);
          }
          else if(mobileIndex<=outerImageContainers.length) {
              $(outerImageContainers[mobileIndex]).css({
                  'opacity': '0',
                  'transform': 'translateX(100vw)'
              });

              $(outerImageContainers[(mobileIndex-1)]).css({
                  'opacity': '0',
                  'transform': 'translateX(-100vw)'
              });

              setTimeout(function () {
                  $(outerImageContainers[mobileIndex]).css({
                      'display': 'none'
                  });

                  mobileIndex--;

                  $(outerImageContainers[mobileIndex]).css({
                      'display': "flex"
                  });
              }, 500);

              setTimeout(function () {
                  $(outerImageContainers[mobileIndex]).css({
                      'opacity': '1',
                      'transform': 'translateX(0)'
                  });
              }, 600);
          }
      }
      else {
          containerTransform += 75;
          transitionSpeed = 2000;

          imageContainer.style.transform = "translateX(" + containerTransform + "vw)";

          if(containerTransform>0){
              setTimeout(function () {
                  focusNextImage();
              }, transitionSpeed);
          }
      }
  }

  function focusReset() {
      if(window.innerWidth < 736)
          imageContainerWidth = outerImageContainers.length*125;
      else
          imageContainerWidth = outerImageContainers.length*75;

      imageContainer.style.width = imageContainerWidth;
      imageContainer.style.transform = "translateX(0vw)";
      containerTransform = 0;
      let deltaX = 0;
  }

  function showSizeChart(image_url) {
      sizeChartContainer.style.display = "flex";
      sizeChartImage.src = image_url;
      
      setTimeout(function () {
          sizeChartContainer.style.opacity = "1";
      }, 300);
  }
  
  function hideSizeChart() {
      sizeChartContainer.style.opacity = "0";

      setTimeout(function () {
          sizeChartContainer.style.display = "none";
      }, 1100);
  }
</script>

<style>
    .glitch_image {
        {% case product.type %}
            {% when 'T-Shirt' %}
            padding-top: 2em;
            {% when 'Shirt' %}
            padding-top: 2em;
            {% when 'Jacket' %}
            padding-top: 2em;

            {% when 'Shorts' %}
            padding-bottom: 2em;
            {% when 'Track Pants' %}
            padding-bottom: 2em;
            {% when 'Jeans' %}
            padding-bottom: 2em;
        {% endcase %}
    }

    .product__images__container {
        {% case product.type %}
            {% when 'T-Shirt' %}
                align-items: flex-end;
            {% when 'Shirt' %}
                align-items: flex-end;
            {% when 'Jacket' %}
                align-items: flex-end;

            {% when 'Shorts' %}
                align-items: flex-start;
            {% when 'Track Pants' %}
                align-items: flex-start;
            {% when 'Jeans' %}
                align-items: flex-start;
        {% endcase %}
    }

</style>

