{% assign current_variant = product.selected_or_first_available_variant %}
{% assign featured_image = current_variant.featured_image | default: product.featured_image %}
<section class="product">
    <div class="product__images">

    {% assign glitched_image = "none" %}
    {% for tag in product.tags %}
      {% if tag contains 'glitched_bottom' %}
        {% assign glitched_image = "glitched_bottom" %}
      {% elsif tag contains 'glitched_top' %}
        {% assign glitched_image = "glitched_top" %}
      {% endif %}
    {% endfor %}



    {% for image in product.images %}
      {% case glitched_image %}
        {% when 'glitched_top' %}
          {% if image.alt contains 'glitched' %}
            <div class="glitch_container">
                <img class="product__image glitch_image_main" src="{{ image.src | img_url: 'master' }}" alt="">
                <img class="glitch_image_top glitch_image" src="{{ image.src | img_url: 'master' }}" alt="">
            </div>
          {% else %}
            <img class="product__image" src="{{ image.src | img_url: 'master' }}" alt="{{ image.alt | escape }}">
          {% endif %}

        {% when 'glitched_bottom' %}
          {% if image.alt contains 'glitched' %}
              <div class="glitch_container">
                  <img class="product__image glitch_image_main" src="{{ image.src | img_url: 'master' }}" alt="">
                  <img class="glitch_image_bottom glitch_image" src="{{ image.src | img_url: 'master' }}" alt="">
              </div>
          {% else %}
              <img class="product__image" src="{{ image.src | img_url: 'master' }}" alt="{{ image.alt | escape }}">
          {% endif %}

        {% else %}
          <img class="product__image" src="{{ image.src | img_url: 'master' }}" alt="{{ image.alt | escape }}">
      {% endcase %}

    {% endfor %}

  </div>

    <div class="product__info">
        <span class="product__info__price">{{ current_variant.price | money }}</span>

        {% include 'size-chart' %}

        <form action="/cart/add" method="post" enctype="multipart/form-data" id="AddToCartForm" class="product__cart-form">

            {% if product.available %}
  {% if product.has_only_default_variant %}
  <input name="id" value="{{ product.variants[0].id }}" type="hidden">
  {% else %}
  <select name="id" id="productSelect">
    {% for variant in product.variants %}
      {% if variant.available %}
        <option value="{{ variant.id }}">
          {{ variant.title }}
        </option>
      {% else %}
        <option disabled="disabled">
          {{ variant.title }} - sold out
        </option>
      {% endif %}
    {% endfor %}
  </select>
{% endif %}
  
{% endif %}

            {% if product.available %}
  <div class="visually-hidden">
    <label for="Quantity">Quantity</label>
    <input type="number" id="Quantity" name="quantity" value="1" min="1">
  </div>
  <button type="submit" name="add" id="AddToCart" class="button--colored" data-product-id="{{ product.variants[0].id }}">Add to cart</button>
  {% else %}
  <span class="product__sold-out">Sold Out</span>
  {% endif %}
        </form>

        <div class="product-info__klarna">
            Pay in installments with
            <strong><a href="https://www.klarna.com/" target="_blank">
                Klarna
            </a></strong>
        </div>
        <div class="product-info__description">
    <h3>Description and Details</h3>
    {{ product.description }}
  </div>
    </div>

    <div class="product_title_container">
        <div class="product_title_height_container">

        </div>
        <h1 id="product_title">{{ product.title }}</h1>
    </div>
</section>

{% section 'product-recommendations' %}

<script type="text/javascript">
  let add_to_cart = $('#AddToCart');

 // console.log(Shopify-Icons.getCart())

  add_to_cart.on('click', e => {
    e.preventDefault();

    let header_cart_text = $('.header-cart__count__text');
    let shopping_cart__empty_text = $('.shopping-cart__empty-text');
    let shopping_cart_text = $('.shopping-cart__content');

    Shopify.addItemFromForm('AddToCartForm');

    // $.ajax({
    //   type: 'GET',
    //   url: '/cart.js',
    //   dataType: 'json',
    //   success: function(data){
    //       console.log(data);

    //       shopping_cart__empty_text.remove();

    //       header_cart_text.html( `[${data.item_count}]`);

    //       data.items.forEach( item => {
    //         console.log(item)
    //       })
    //   },
    //   error: function(){}
    // });
  });

  var imagePath = '{{ image.src | img_url: 'master' }}';

  let glitchImages = document.getElementsByClassName("glitch_image");
  let glitchImageContainers = document.getElementsByClassName("glitch_container");

  $( function() {
      $( ".glitch_image" ).mgGlitch({
          destroy : false, // set 'true' to stop the plugin
          glitch: true, // set 'false' to stop glitching
          scale: true, // set 'false' to stop scaling
          blend : true, // set 'false' to stop glitch blending
          blendModeType : '{{ settings.products_glitch_blend }}', // select blend mode type
          glitch1TimeMin : {{ settings.products_glitch_alpha_min }}, // set min time for glitch 1 elem
          glitch1TimeMax : {{ settings.products_glitch_alpha_max }}, // set max time for glitch 1 elem
          glitch2TimeMin : {{ settings.products_glitch_omega_min }}, // set min time for glitch 2 elem
          glitch2TimeMax : {{ settings.products_glitch_omega_max }}, // set max time for glitch 2 elem
          zIndexStart : 8, // because of absolute position, set z-index base value
      });
  });

  let index = 0;


  let checkForGlitch = false;

  // setInterval(function () {
  //   for(let container in glitchImageContainers){
  //       switch (container.offsetHeight) {
  //           case undefined:
  //           case "0":
  //           case "0px":
  //       }
  //   }
  //     console.log(window.innerWidth);
  //
  //   if(window.innerWidth < 736){
  //       checkForGlitch = true;
  //   }
  //
  //   if(checkForGlitch){
  //       if(window.innerWidth < 736){
  //           $( function() {
  //               $( ".glitch_image" ).mgGlitch({
  //                   destroy : true, // set 'true' to stop the plugin
  //               });
  //           });
  //
  //           checkForGlitch = true;
  //       }
  //       else {
  //           $( function() {
  //               $( ".glitch_image" ).mgGlitch({
  //                   destroy : false, // set 'true' to stop the plugin
  //               });
  //           });
  //
  //           checkForGlitch = false;
  //       }
  //   }
  //
  //
  // }, 1000);

  window.addEventListener('resize', resizeGlitchContainer);
  window.addEventListener('load', resizeGlitchContainer);

  function resizeGlitchContainer() {
      for(let i = 0; i < glitchImageContainers.length; i++) {
          glitchImageContainers[i].style.height = (glitchImages[i].offsetHeight) + "px";
      }
  }

</script>
